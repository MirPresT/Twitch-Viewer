{"version":3,"sources":["scripts/services.js"],"names":[],"mappings":"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","file":"scripts/services.js","sourcesContent":["(()=>{\r\n    angular.module('myApp')\r\n        .service('menuService',menuService)\r\n        .service('popupService',popupService)\r\n        .service('parseDataService',parseDataService)\r\n        .service('setCSS',setCSS);\r\n\r\n        function menuService($http,$q) {\r\n\r\n            const vm = this;\r\n\r\n            vm.online = true;\r\n            vm.offline = true;\r\n\r\n            vm.setView = (boolOne,boolTwo) => {\r\n                vm.online = boolOne;\r\n                vm.offline = boolTwo;\r\n            }\r\n        }\r\n\r\n        function popupService(){\r\n            // this service is being injected into two instances of the popup controller to communicate via ng show values\r\n            const vm = this;\r\n\r\n            vm.showMe = false;\r\n\r\n            vm.showPopup = (bool) => {\r\n                vm.showMe = bool;\r\n            }\r\n        }\r\n\r\n        function parseDataService(getTwitchData, $q) {\r\n\r\n            const vm = this;\r\n            const promises = getTwitchData.async();\r\n\r\n        /*\r\n         * Arrays to hows parsed card data used in templates\r\n        */\r\n            vm.channels = {\r\n                online: [],\r\n                offline: []\r\n            }\r\n\r\n        /*\r\n         * Map and request stream and or channel for each\r\n        */\r\n            let P = $q.all(promises).then( response => {\r\n                response.map( vm.checkOnline );\r\n            }, reason => {\r\n                console.log( 'default request failed', reason);\r\n            });\r\n\r\n            vm.checkOnline = obj => {\r\n                const {data:{message:msg}} = obj;\r\n                // if error\r\n                if (msg) { return { valid:false, msg } }\r\n                // destructure object\r\n                const { data, data: {stream} } = obj;\r\n                // if online\r\n                if (stream) {\r\n                    const { channel } = stream,\r\n                    { display_name:name, game , status } = channel,\r\n                     parsedInfo = vm.setDataOnline(stream);\r\n                     vm.channels.online.push(parsedInfo);\r\n                     return {valid:true} ;\r\n                  }\r\n                else {\r\n                    // if offline\r\n                    const {_links:{channel:url}} = data;\r\n                    return getTwitchData.getChannel(url)\r\n                        .then( data => {\r\n                            // Parese Data for cards\r\n                            const parsedInfo = vm.setDataOffline(data.data);\r\n                            if ( !checkDuplicates(parsedInfo) ){\r\n                                vm.channels.offline.push(parsedInfo);\r\n                                return { valid:true };\r\n                            } else {\r\n                                return { duplicate:true };\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n\r\n            /*\r\n             * Parse Data and Set To Cards Variable\r\n            */\r\n            vm.setDataOffline = data => {\r\n                // channel object later used for ng repeat\r\n                let ci = SetDataBoth(data);\r\n                ci.live = false;\r\n                ci.game = 'Offline';\r\n                ci.frontAction = 'Go to channel';\r\n                return ci;\r\n            }\r\n            vm.setDataOnline = stream => {\r\n                // channel object later used for ng repeat\r\n                const { channel, live, game, viewers, preview:{large} } = stream;\r\n\r\n                let ci = SetDataBoth(channel);\r\n\r\n                ci.live = true;\r\n                ci.game = game;\r\n                ci.viewers = abbreviateNumber(viewers);\r\n                ci.previewImg = large;\r\n                ci.strmDscr = concatDscr(status);\r\n                ci.frontAction = 'Watch Now';\r\n                return ci;\r\n            }\r\n            function SetDataBoth(channel){\r\n                // channel object later used for ng repeat\r\n                const { display_name:name, followers, url, status } = channel;\r\n                // construct object using const variables above\r\n                return {\r\n                    name,\r\n                    followers: abbreviateNumber(followers),\r\n                    url,\r\n                    status: concatDscr(status)\r\n                };\r\n            }\r\n\r\n            /*\r\n             * Check for Duplicates\r\n            */\r\n            function checkDuplicates( parsedData ) {\r\n                let match = false;\r\n\r\n                const {name} = parsedData;\r\n                const {online, offline} = vm.channels;\r\n                const allChannels = online.concat(offline);\r\n\r\n                allChannels.map(function compare( newChannelObj ) {\r\n                    const {name:existingName} = newChannelObj;\r\n                    if(name.toLowerCase() === existingName.toLowerCase()) {\r\n                        match = true;\r\n                    }\r\n                });\r\n\r\n\r\n                return match;\r\n            }\r\n\r\n\r\n            /*\r\n             * further manipulate certain data...\r\n             */\r\n            // abbreviate number\r\n            function abbreviateNumber(value) {\r\n                var newValue = value.toString();\r\n\r\n                if (value >= 1000){\r\n                    if ( value < 1000000 ){\r\n                        return `${Math.floor(newValue / 1000)} k`;\r\n                    }\r\n                    else {\r\n                        let n = newValue / 1000000;\r\n                        let s = n.toString();\r\n                        n = `${s.slice(0, s.indexOf('.')+2)}m`;\r\n                        if(n.slice(2,-1) === '0'){\r\n                            return `${n.slice(0,1)}m`;\r\n                        } else return n;\r\n                    }\r\n                }\r\n                return newValue;\r\n            }\r\n            // concat the status\r\n            function concatDscr(str) {\r\n                if (str === null) {return ''}\r\n                return  `${str.slice(0,30)} ...`;\r\n            }\r\n        }\r\n        function setCSS() {\r\n            const vm = this;\r\n\r\n            const page = $(\".pageContent\");\r\n\r\n            vm.bind = function() {\r\n                $( window ).resize( vm.setPageWidth );\r\n            }\r\n\r\n            vm.setPageWidth = function() {\r\n                const pWidth = window.innerWidth;\r\n                page.css({\r\n                    width:`${pWidth - 200}px`\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n})()\r\n"]}