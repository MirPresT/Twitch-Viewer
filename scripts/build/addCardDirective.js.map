{"version":3,"sources":["scripts/addCardDirective.js"],"names":[],"mappings":"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","file":"scripts/addCardDirective.js","sourcesContent":["(() => {\r\n    angular.module('myApp')\r\n        .controller('popupController', popupController)\r\n        .directive('addcardDir', addcardDir );\r\n\r\n        function popupController($scope, popupService, getTwitchData, parseDataService) {\r\n            const vm = this;\r\n            vm.service = popupService;\r\n            vm.showPopup = popupService.showPopup;\r\n\r\n            // passing input value to service to make httpRequest\r\n            vm.makeRequest = stream => {\r\n                if (stream.length > 1 ) {\r\n                    getTwitchData.getStream( stream )\r\n                        .then(response => {\r\n                            let ret = parseDataService.checkOnline( response );\r\n                            vm.userText=\"\";\r\n                            if( ret === true ) {\r\n                                animateSuccessResponse();\r\n                            } else {\r\n                                console.log(ret);\r\n                                animateErrorResponse(stream);\r\n                            }\r\n                        }, reason => {\r\n                            console.log(`${stream} not a valid channel`);\r\n                            vm.userText=\"\";\r\n                            animateErrorResponse(stream);\r\n                        });\r\n                }\r\n            }\r\n            // animate check icon but allow it to be called multiple times\r\n            function animateSuccessResponse() {\r\n                vm.resultText = 'Channel Added';\r\n                const check = document.getElementById('poly-check');\r\n                const newCheck = check.cloneNode(true);\r\n\r\n                check.classList.add('check-active');\r\n                // 400 ms after animation finishes replace it with the original\r\n                const timeout = window.setTimeout(() => {\r\n                    check.parentNode.replaceChild(newCheck, check);\r\n                    vm.resultText = \"\";\r\n                    $scope.$apply();\r\n                }, 1500);\r\n\r\n            }\r\n            // animate x icon but allow it to be called multiple timesx\r\n            function animateErrorResponse ( enteredString ){\r\n                vm.resultText = `'${enteredString}' not valid.`\r\n                const xPaths = document.querySelectorAll('#xOne, #xTwo');\r\n                const group = document.getElementById('x-group');\r\n                const newGroup = group.cloneNode(true);\r\n\r\n                const array = [ xPaths[0], xPaths[1] ];\r\n\r\n                // give each path an active class;\r\n                array.map( elem => {\r\n                    elem.classList.add('x-active')\r\n                });\r\n\r\n                const timeout = window.setTimeout(()=>{\r\n                    group.parentNode.replaceChild(newGroup,group);\r\n                    vm.resultText = \"\";\r\n                    $scope.$apply();\r\n                }, 1500);\r\n\r\n            }\r\n        }\r\n\r\n        function addcardDir() {\r\n\r\n            return {\r\n                controller: 'popupController',\r\n                controllerAs: \"card\",\r\n                templateUrl: 'partials/addCard.html',\r\n                link: (scope, element, attr, ctrl) => {\r\n\r\n                }\r\n            }\r\n        }\r\n})()\r\n"]}