{"version":3,"sources":["scripts/cardController.js"],"names":[],"mappings":"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","file":"scripts/cardController.js","sourcesContent":["(function() {\r\n\r\n    angular.module('myApp')\r\n        .controller('cardsCtrl', cardsCtrl);\r\n\r\n    function cardsCtrl($scope, getTwitchData, $http, $q) {\r\n\r\n        // setting stuff\r\n        var vm = this;\r\n        // use service to grab http info\r\n        var promiseArr = getTwitchData.async();\r\n\r\n        // set array for ng repeat;\r\n        vm.channels = [\r\n            //empty until request finish;\r\n        ];\r\n\r\n        let strictPromiseArr = promiseArr.map( a => {\r\n          return a.pop();\r\n        })\r\n\r\n        var promiseArr = getTwitchData.async();\r\n\r\n\r\n        let P = $q.all(strictPromiseArr).then( response => {\r\n          // got all requests from first request\r\n          response.map( obj => {\r\n            if (obj.data.error) {return obj.data.message}\r\n            let { data, data: {stream} } = obj;\r\n\r\n            if (stream) {\r\n            const { channel } = stream,\r\n                  { display_name:name, game , status } = channel;\r\n            // do stuff for online\r\n          } else {\r\n            // make request for new data\r\n            const { _links:{channel} } = data;\r\n            console.log(url);\r\n\r\n          }\r\n\r\n            // if online\r\n\r\n          })\r\n          console.log('finished wating');\r\n        });\r\n\r\n\r\n\r\n        /*\r\n         * Make channel request for each channel\r\n         */\r\n\r\n        promiseArr.map(function(arr) {\r\n\r\n            // arr 0 === name of channel arr 1 is promise\r\n            return arr[1].then(function(data) {\r\n                // check if chanel exists\r\n                if (data.data.error !== undefined) {\r\n                    return 'error';\r\n                } else {\r\n                    // check if channel is offline/online\r\n                    if (data.data.stream === null) {\r\n                        return [true];\r\n                    } else {\r\n                        setViewOnline();\r\n                        return [setDataOnline(data.data),false];\r\n                    };\r\n                }\r\n\r\n            }).then(function( cardArr ) {\r\n                if (cardArr === 'error' ){\r\n                    console.log(arr[0],'channel doesnt exist');\r\n                    // push a special object to array for ^\r\n                    return 'error';\r\n                }\r\n                // if chanel exists and ONLINE push channel\r\n                else if  ( cardArr[1] === false ){\r\n                    vm.channels.push(cardArr[0]);\r\n                    return cardArr;\r\n                } else if(cardArr[0] === true){\r\n                    // chanel is offline make request\r\n                    getTwitchData.getChannel(arr[0])\r\n                        .then( data => {\r\n                            const channelInfo = setDataOffline(data.data);\r\n                            vm.channels.push(channelInfo);\r\n                            setViewOffline();\r\n                        });\r\n                    return cardArr;\r\n                }\r\n            })\r\n        });\r\n\r\n        /*\r\n         * data manipulation to get info I want\r\n         */\r\n        function setDataOffline(data) {\r\n            // channel object later used for ng repeat\r\n            let ci = SetDataBoth(data);\r\n            ci.live = false;\r\n            ci.game = 'offline';\r\n            return ci;\r\n        }\r\n        $scope.live = true;\r\n        function setDataOnline(data) {\r\n            // channel object later used for ng repeat\r\n\r\n            let stream = data.stream;\r\n            var { live, game, viewers } = stream;\r\n\r\n            let ci = SetDataBoth(data.stream.channel);\r\n            let sO = data.stream;\r\n            ci.live = true;\r\n            ci.game = game;\r\n            ci.viewers = abbreviateNumber(viewers);\r\n            ci.previewImg = sO.preview.large;\r\n            ci.strmDscr = concatDscr(sO.channel.status);\r\n            ci.frontSubtitel = 'Watch Now';\r\n            ci.streamLabel = 'Live';\r\n            return ci;\r\n        }\r\n        function SetDataBoth(data){\r\n            // channel object later used for ng repeat\r\n            var ci = {}\r\n            ci.profileName = data.display_name;\r\n            ci.followers = abbreviateNumber(data.followers);\r\n            ci.url = data.url;\r\n            ci.frontSubtitel = 'View Channel';\r\n            ci.streamLabel = 'Offline';\r\n\r\n            return ci;\r\n        }\r\n        function setViewOnline(){\r\n        }\r\n        function setViewOffline(){\r\n            // update controller and update view\r\n        }\r\n\r\n\r\n        /*\r\n         * further manipulate certain data...\r\n         */\r\n\r\n        function abbreviateNumber(value) {\r\n            var newValue = value.toString();\r\n\r\n            if (value >= 1000){\r\n                var suffixes = ['k','m'];\r\n                if ( value < 1000000 ){\r\n                    return Math.floor(newValue / 1000) + 'k';\r\n                }\r\n                else {\r\n                    var n = newValue / 1000000;\r\n                    var s = n.toString();\r\n                    n = s.slice(0, s.indexOf('.')+2) + 'm';\r\n                    if(n.slice(2,-1) === '0'){\r\n                        return n.slice(0,1)+'m';\r\n                    } else return n;\r\n                }\r\n            }\r\n            return newValue;\r\n        }\r\n\r\n        function concatDscr(str) {\r\n            return str.slice(0,30) + ' ...';\r\n        }\r\n\r\n    }\r\n})()\r\n"]}