{"version":3,"sources":["scripts/card/cardController-C6.js"],"names":[],"mappings":"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","file":"scripts/card/cardController-C6.js","sourcesContent":["'use strict';\n\n(function () {\n    angular.module('myApp').controller('cardsCtrl', cardsCtrl);\n\n    function cardsCtrl($scope, getTwitchData) {\n\n        // setting stuff\n        var vm = this;\n        // use service to grab http info\n        var promiseArr = getTwitchData.async();\n\n        // set array for ng repeat;\n        vm.channels = [\n            //empty until request finish;\n        ];\n\n        var foo = {\n            bar: 'one',\n            bin: 'two'\n        };\n\n        var bar = foo.bar;\n        var bin = foo.bin;\n\n        console.log(bar);\n\n        /*\n         * Make channel request for each channel\n         */\n        promiseArr.map(function (arr) {\n\n            return arr[1].then(function (data) {\n                // check if chanel exists\n                if (data.data.error !== undefined) {\n                    return 'error';\n                } else {\n                    // check if channel is offline/online\n                    if (data.data.stream === null) {\n                        return [true];\n                    } else {\n                        setViewOnline();\n                        return [setDataOnline(data.data), false];\n                    };\n                }\n            }).then(function (cardArr) {\n                if (cardArr === 'error') {\n                    console.log(arr[0], 'channel doesnt exist');\n                    // push a special object to array\n                    return 'error';\n                }\n                // if chanel exists and ONLINE push channel\n                else if (cardArr[1] === false) {\n                        // vm.channels.push(cardArr[0]);\n                        return cardArr;\n                    } else if (cardArr[0] === true) {\n                        // chanel is offline make request\n                        getTwitchData.getChannel(arr[0]).then(function (data) {\n                            var channelInfo = setDataOffline(data.data);\n                            // vm.channels.push(channelInfo);\n                            setViewOffline();\n                        });\n                        return cardArr;\n                    }\n            });\n        });\n\n        /*\n         * data manipulation to get info I want\n         */\n        function setDataOffline(data) {\n            // channel object later used for ng repeat\n            var ci = SetDataBoth(data);\n            ci.live = false;\n            return ci;\n        }\n        $scope.live = true;\n        function setDataOnline(data) {\n            // channel object later used for ng repeat\n            var ci = SetDataBoth(data.stream.channel);\n            var sO = data.stream;\n            ci.live = true;\n            ci.game = sO.game;\n            ci.viewers = abbreviateNumber(sO.viewers);\n            ci.previewImg = sO.preview.large;\n            ci.strmDscr = concatDscr(sO.channel.status);\n            ci.frontSubtitel = 'Watch Now';\n            ci.streamLabel = 'Live';\n            return ci;\n        }\n        function SetDataBoth(data) {\n            // channel object later used for ng repeat\n            var ci = {};\n            ci.profileName = data.display_name;\n            ci.followers = abbreviateNumber(data.followers);\n            ci.url = data.url;\n            ci.frontSubtitel = 'Offline';\n            ci.streamLabel = 'Offline';\n\n            return ci;\n        }\n        function setViewOnline() {}\n        function setViewOffline() {}\n        // update controller and update view\n\n        /*\n         * further manipulate certain data...\n         */\n\n        function abbreviateNumber(value) {\n            var newValue = value.toString();\n\n            if (value >= 1000) {\n                var suffixes = ['k', 'm'];\n                if (value < 1000000) {\n                    return Math.floor(newValue / 1000) + 'k';\n                } else {\n                    var n = newValue / 1000000;\n                    var s = n.toString();\n                    n = s.slice(0, s.indexOf('.') + 2) + 'm';\n                    if (n.slice(2, -1) === '0') {\n                        return n.slice(0, 1) + 'm';\n                    } else return n;\n                }\n            }\n            return newValue;\n        }\n\n        function concatDscr(str) {\n            return str.slice(0, 30) + ' ...';\n        }\n    }\n})();\n//# sourceMappingURL=cardController-C6.js.map\n"]}