{"version":3,"sources":["app/build/concat.js"],"names":[],"mappings":"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","file":"app/build/concat.js","sourcesContent":["(function() {\r\n    angular.module('myApp', [\"ngAnimate\",\"factories\",\"ngRoute\"]);\r\n})();\r\n\r\n(() => {\n  angular.module('myApp')\n    .controller('popupController', ['$scope', 'popupService', 'getTwitchData', 'parseDataService', '$q', popupController])\n    .directive('addcardDir', addcardDir);\n\n  function popupController($scope, popupService, getTwitchData, parseDataService, $q) {\n    const vm = this;\n    vm.service = popupService;\n    vm.showPopup = popupService.showPopup;\n    vm.instructionText = \"start typing...\";\n\n    vm.checkEnter = (event, input) => {\n      if (event.charCode === 13) {\n        vm.makeRequest(input);\n      }\n    }\n\n      // passing input value to service to make httpRequest\n    vm.makeRequest = stream => {\n        if (stream.length > 1) {\n          getTwitchData.getStream(stream)\n            .then(response => {\n              vm.userText = \"\";\n              const res = parseDataService.checkOnline(response);\n              // this response needs to be a promise even if...\n              // the response is not; i.e if stream is online;\n              $q.when(res).then(function(data) {\n                if (data.duplicate) {\n                  animateErrorResponse(stream, data);\n                }\n                if (data.valid) {\n                  animateSuccessResponse();\n                } else {\n                  animateErrorResponse(stream, data);\n                }\n              })\n            }, reason => {\n              console.log(`${stream} not a valid channel`);\n              vm.userText = \"\";\n              animateErrorResponse(stream, reason);\n            });\n        }\n      }\n      // animate check icon but allow it to be called multiple times\n    function animateSuccessResponse() {\n      vm.instructionText = 'Channel Added';\n      const check = document.getElementById('poly-check');\n      const newCheck = check.cloneNode(true);\n      const addIcon = document.getElementById('add-svg-icon');\n\n      addIcon.style.opacity = \"0\";\n\n      check.classList.add('check-active');\n      // 400 ms after animation finishes replace it with the original\n      const timeout = window.setTimeout(() => {\n        check.parentNode.replaceChild(newCheck, check);\n        vm.resultText = \"\";\n        vm.instructionText = \"start typing...\";\n        addIcon.style.opacity = \"1\";\n        $scope.$apply();\n      }, 2500);\n\n    }\n    // animate x icon but allow it to be called multiple timesx\n    function animateErrorResponse(enteredString, reason) {\n      if (reason.duplicate) {\n        vm.instructionText = `already added.`;\n      } else if (!reason.valid) {\n        vm.instructionText = `not a channel`;\n      }\n\n      // add the class to all of them and set a delay for each...\n\n      const errorIcon = document.getElementById('error-icon');\n      const children = errorIcon.children;\n      const newGroup = errorIcon.cloneNode(true);\n      const addIcon = document.getElementById('add-svg-icon');\n\n      addIcon.style.opacity = \"0\";\n\n      for (let i = 0; i < children.length; i++) {\n        children[i].classList.add('error-active');\n      }\n\n      const timeout = window.setTimeout(() => {\n        addIcon.style.opacity = \"1\";\n        errorIcon.parentNode.replaceChild(newGroup, errorIcon);\n        vm.resultText = \"\";\n        vm.instructionText = \"start typing...\";\n        $scope.$apply();\n      }, 2500);\n\n    }\n  }\n\n  function addcardDir() {\n\n    return {\n      controller: 'popupController',\n      controllerAs: \"card\",\n      templateUrl: 'app/build/partials/addCard.html',\n      link: (scope, element, attr, ctrl) => {\n\n      }\n    }\n  }\n})();\n\r\n(function() {\r\n\r\n    angular.module('myApp')\r\n        .controller('cardsCtrl', ['$scope','$http','$q','getTwitchData','menuService','setCSS','parseDataService', cardsCtrl]);\r\n\r\n    function cardsCtrl($scope, $http, $q, getTwitchData, menuService, setCSS, parseDataService) {\r\n\r\n        // seting variable to correct context of this\r\n        const vm = this;\r\n        // array for each card object to be pushed to\r\n        vm.channels = parseDataService.channels;\r\n        // init values\r\n\r\n        vm.service = menuService;\r\n\r\n        const css = setCSS;\r\n        css.checkPageWidth();\r\n        css.bind();\r\n\r\n        // set position of search\r\n        const $p = $('.pageContent');\r\n        const search = $p.find('.search-container');\r\n        const grid = $p.find('.live-card-grid');\r\n        const width = $('.live-card-grid').width();\r\n        search.css({\r\n          \"width\": `${width - 40}` // 40 equates for the padding of the cards\r\n        });\r\n\r\n\r\n    }\r\n})();\r\n\r\n(function(){\r\n    angular.module('myApp')\r\n        .directive('myDir', ['$timeout','$interval','setRandomCover','parseDataService',dirSample]);\r\n\r\n    // custom directie to keep track of dom elements of individual cards...\r\n    function dirSample($interval,$timeout,setRandomCover,parseDataService) {\r\n        return {\r\n            templateUrl: 'app/build/partials/cardContent.html',\r\n            scope: {\r\n                channel: '=',\r\n                appear: '=',\r\n                toggle: '=',\r\n                showBack: '='\r\n            },\r\n            link: function(scope, element, attributes){\r\n                // grab all necesssary variables for elemnts in card\r\n                var header = element.find('.header'),\r\n                    frontButton = element.find('.subhead-btn'),\r\n                    personIcon = frontButton.children(),\r\n                    exitButton = element.find('#info-close-btn');\r\n\r\n            /*\r\n              * opening and closing more info\r\n            */\r\n\r\n                // animate front button to fill and then fade out\r\n                frontButton.bind(\"click\", () => {\r\n                    scope.showBack = true;\r\n                    frontButton.addClass(\"animate-fill\");\r\n                    personIcon.addClass('animate-hide');\r\n                    const id = window.setTimeout(showInfo,800);\r\n                    function showInfo(){\r\n                        scope.appear = true;\r\n                        scope.$apply();\r\n                        const id = window.setTimeout(function () {\r\n                            frontButton.removeClass(\"animate-fill\");\r\n                            personIcon.removeClass('animate-hide');\r\n                        }, 200);\r\n                    }\r\n                });\r\n                // animate closing of info pannel\r\n                exitButton.bind('click',() => {\r\n                    scope.showBack = false;\r\n                    scope.appear = false;\r\n                    frontButton.addClass('animate-fill-backwards');\r\n                    personIcon.addClass('animate-show');\r\n\r\n                    const id = window.setTimeout(()=> {\r\n                        frontButton.removeClass('animate-fill-backwards');\r\n                        personIcon.removeClass('animate-show');\r\n                    }, 800);\r\n\r\n                    scope.$apply();\r\n                });\r\n\r\n                /*\r\n                  * Setting Random CoverPhoto\r\n                */\r\n                if( scope.channel.live === false ) {\r\n                  const imagePath = setRandomCover.get();\r\n                  header.css({\r\n                    \"background\":`linear-gradient(\r\n                        rgba(35, 44, 56, .95),\r\n                        rgba(35, 44, 56, .95)\r\n                        ), url(\"${imagePath}\")`,\r\n                    \"background-size\":\"cover\"\r\n                  });\r\n                } else {\r\n                  const previewImg = scope.channel.previewImg;\r\n                  const imagePath = setRandomCover.get();\r\n                  header.css({\r\n                    \"background\":`linear-gradient(\r\n                      rgba(57, 101, 166, .9),\r\n                      rgba(57, 101, 166, .9)\r\n                    ), url(\"${previewImg}\")`,\r\n                    \"background-size\":\"cover\"\r\n                  });\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\n(()=>{\r\n    angular.module('myApp')\r\n        .controller('navController',navController)\r\n        .controller('addbtnController',['$http','$q','menuService',addbtnController]);\r\n\r\n        function navController($http,$q,menuService) {\r\n            const nav = this;\r\n            nav.setView = menuService.setView;\r\n        }\r\n        function addbtnController(popupService){\r\n            const vm = this;\r\n            vm.showPopup = popupService.showPopup;\r\n        }\r\n})();\r\n\r\n(function(){\r\n    angular.module('myApp')\r\n        .directive('navDir', ['$timeout','$interval',navDir]);\r\n\r\n        function navDir() {\r\n            return {\r\n                templateUrl: 'app/build/partials/nav.html',\r\n                controller: 'navController',\r\n                link: function(scope,element,attr) {\r\n\r\n                  var tabAll = element.find('#tab-all'),\r\n                      tabOnline = element.find(\"#tab-online\"),\r\n                      tabOffline = element.find(\"#tab-offline\");\r\n\r\n                  init('all'); //starting tab to show\r\n\r\n                  function init(str){\r\n                    scope.activeTab = str;\r\n                  }\r\n\r\n                  tabAll.bind('click', function(){\r\n                    scope.activeTab = 'all';\r\n                    scope.$apply();\r\n                  });\r\n                  tabOnline.bind('click', function(){\r\n                    scope.activeTab = 'online';\r\n                    scope.$apply();\r\n                  });\r\n                  tabOffline.bind('click', function(){\r\n                    scope.activeTab = 'offline';\r\n                    scope.$apply();\r\n                  });\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n})();\r\n\r\n(function() {\r\n    angular.module('factories', [])\r\n        .factory('getTwitchData', ['$http', '$q', getTwitchData]);\r\n\r\n    function getTwitchData($http,$q) {\r\n\r\n        var baseUrl = 'https://api/twitch.tv/kraken';\r\n        var defChannels = ['comster404','freecodecamp','kittyplaysgames','twosync','freecodecamp','krzjn', 'kaypealol', 'mrgoldensports', 'vgbootcamp', 'sodapoppin', 'femsteph', 'streamerhouse', 'joshog', 'pgl'];\r\n\r\n        const url = 'https://api.twitch.tv/kraken/streams/';\r\n        const channelUrl = 'https://api.twitch.tv/kraken/channels/';\r\n        const callBack = '?callback=JSON_CALLBACK';\r\n\r\n        const obj = {\r\n            async: function() {\r\n                let promises = [];\r\n                const completed = [];\r\n                setPromises();\r\n\r\n                // make a request for each channel with a promise\r\n                function setPromises() {\r\n                    defChannels.map(channel => {\r\n                        if (completed.indexOf(channel) === -1) {\r\n                            const promise = $http.jsonp(url+channel+callBack)\r\n                                .then(data => {\r\n                                    return data;\r\n                                });\r\n                            promises.push(promise);\r\n                            completed.push(channel);\r\n                        } else {\r\n                            console.log(`repeat channel found in default list \\n--- ${channel} ---`);\r\n                        };\r\n                    })\r\n                };\r\n\r\n                return promises;\r\n            },\r\n            getChannel : function(str) { // passing in entire link\r\n                return $http.jsonp(str + callBack)\r\n                    .then( data => {\r\n                        return data;\r\n                    });\r\n            },\r\n            getStream : function( profName ) { // passing in entire link\r\n                return $http.jsonp(url + profName + callBack)\r\n                    .then( data => {\r\n                        return data;\r\n                    });\r\n            }\r\n        };\r\n\r\n        return obj;\r\n    }\r\n\r\n})();\r\n\r\n(()=>{\r\n    angular.module('myApp')\r\n        .service('menuService',menuService)\r\n        .service('popupService',popupService)\r\n        .service('parseDataService',parseDataService)\r\n        .service('setCSS',setCSS)\r\n        .service('setRandomCover',setRandomCover);\r\n\r\n        function menuService($http,$q) {\r\n            const vm = this;\r\n            vm.online = true;\r\n            vm.offline = true;\r\n\r\n            vm.setView = (boolOne,boolTwo) => {\r\n              vm.online = boolOne;\r\n              vm.offline = boolTwo;\r\n            }\r\n        }\r\n\r\n        function popupService(){\r\n            // this service is being injected into two instances of the popup controller to communicate via ng show values\r\n            const vm = this;\r\n\r\n            vm.showMe = false;\r\n\r\n            vm.showPopup = (bool) => {\r\n                vm.showMe = bool;\r\n            }\r\n        }\r\n\r\n        function parseDataService(getTwitchData, $q) {\r\n\r\n            const vm = this;\r\n            const promises = getTwitchData.async();\r\n\r\n        /*\r\n         * Arrays to hows parsed card data used in templates\r\n        */\r\n            vm.channels = {\r\n                online: [],\r\n                offline: []\r\n            }\r\n\r\n        /*\r\n         * Map and request stream and or channel for each\r\n        */\r\n            let P = $q.all(promises).then( response => {\r\n                response.map( vm.checkOnline );\r\n            }, reason => {\r\n                console.log( 'default request failed', reason);\r\n            });\r\n\r\n            vm.checkOnline = obj => {\r\n                const {data:{message:msg}} = obj;\r\n                // if error\r\n                if (msg) { return { valid:false, msg } }\r\n                // destructure object\r\n                const { data, data: {stream} } = obj;\r\n                // if online\r\n                if (stream) {\r\n                    const { channel } = stream,\r\n                    { display_name:name, game , status } = channel,\r\n                    parsedInfo = vm.setDataOnline(stream);\r\n\r\n                     const isDuplicate = checkDuplicates(parsedInfo);\r\n                     if( isDuplicate ) {\r\n                       return { duplicate:true };\r\n                     }\r\n\r\n                     vm.channels.online.push(parsedInfo);\r\n                     return { valid:true };\r\n                  }\r\n                else {\r\n                    // if offline\r\n                    const {_links:{channel:url}} = data;\r\n                    return getTwitchData.getChannel(url)\r\n                        .then( data => {\r\n                            // Parese Data for cards\r\n                            const parsedInfo = vm.setDataOffline(data.data);\r\n                            if ( checkDuplicates(parsedInfo) === false ){\r\n                              vm.channels.offline.push(parsedInfo);\r\n                              return { valid:true };\r\n                            } else {\r\n                              return { duplicate:true };\r\n                            }\r\n                        });\r\n                }\r\n            }\r\n\r\n            /*\r\n             * Parse Data and Set To Cards Variable\r\n            */\r\n            vm.setDataOffline = data => {\r\n                // channel object later used for ng repeat\r\n                let ci = SetDataBoth(data);\r\n                ci.live = false;\r\n                ci.game = 'Offline';\r\n                ci.frontAction = 'Go to channel';\r\n                return ci;\r\n            }\r\n            vm.setDataOnline = stream => {\r\n                // channel object later used for ng repeat\r\n                const { channel, live, game, viewers, preview:{large} } = stream;\r\n\r\n                let ci = SetDataBoth(channel);\r\n\r\n                ci.live = true;\r\n                ci.game = game;\r\n                ci.viewers = abbreviateNumber(viewers);\r\n                ci.previewImg = large;\r\n                ci.strmDscr = concatDscr(status);\r\n                ci.frontAction = 'Watch Now';\r\n                return ci;\r\n            }\r\n            function SetDataBoth(channel){\r\n                // channel object later used for ng repeat\r\n                const { display_name:name, followers, url, status } = channel;\r\n                return {\r\n                    name,\r\n                    followers: abbreviateNumber(followers),\r\n                    url,\r\n                    status: concatDscr(status)\r\n                };\r\n            }\r\n            /*\r\n             * Check for Duplicates\r\n            */\r\n            function checkDuplicates( parsedData ) {\r\n                let match = false;\r\n                const {name} = parsedData;\r\n                const {online, offline} = vm.channels;\r\n                const allChannels = online.concat(offline);\r\n\r\n                allChannels.map(compare);\r\n\r\n                function compare( newChannelObj ) {\r\n                    const {name:existingName} = newChannelObj;\r\n                    if(name.toLowerCase() === existingName.toLowerCase()) {\r\n                        match = true;\r\n                    }\r\n                }\r\n\r\n                return match;\r\n            }\r\n\r\n            /*\r\n             * further manipulate certain data...\r\n             */\r\n            // abbreviate number\r\n            function abbreviateNumber(value) {\r\n                var newValue = value.toString();\r\n\r\n                if (value >= 1000){\r\n                    if ( value < 1000000 ){\r\n                        return `${Math.floor(newValue / 1000)}k`;\r\n                    }\r\n                    else {\r\n                        let n = newValue / 1000000;\r\n                        let s = n.toString();\r\n                        n = `${s.slice(0, s.indexOf('.')+2)}m`;\r\n                        if(n.slice(2,-1) === '0'){\r\n                            return `${n.slice(0,1)}m`;\r\n                        } else return n;\r\n                    }\r\n                }\r\n                return newValue;\r\n            }\r\n            // concat the status\r\n            function concatDscr(str) {\r\n                if (str === null) {return ''}\r\n                return  `${str.slice(0,30)} ...`;\r\n            }\r\n        }\r\n        function setCSS() {\r\n            const vm = this;\r\n            const page = $(\".pageContent\");\r\n\r\n            vm.bind = function() {\r\n                $( window ).resize( vm.checkPageWidth );\r\n            }\r\n\r\n            vm.checkPageWidth = function() {\r\n                const pWidth = window.innerWidth;\r\n                const pHeight = window.innerHeight;\r\n\r\n\r\n                if (pWidth > 414) {\r\n                  page.css({\r\n                      width:`${pWidth - 200}px`\r\n                  });\r\n                } else {\r\n                  page.css({\r\n                      \"width\":\"100%\"\r\n                  });\r\n                }\r\n            }\r\n        }\r\n\r\n        function setRandomCover() {\r\n          const vm = this;\r\n          vm.get = () => {\r\n            const options = [\"Images/astroSpace.jpg\",\"Images/csGO.jpg\", \"Images/marioIsland.jpg\", \"Images/LoL.jpg\"];\r\n            const n = Math.floor(Math.random() * options.length);\r\n            return options[n];\r\n          }\r\n        }\r\n})();\r\n"]}